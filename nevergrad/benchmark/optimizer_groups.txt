all_bo = [
    "BO",
    "LBO",
    "MidQRBO",
    "QRBO",
    "RBO",
    "chainBOwithLHS",
    "chainBOwithLHS30",
    "chainBOwithLHSdim",
    "chainBOwithLHSsqrt",
    "chainBOwithMetaRecentering",
    "chainBOwithMetaRecentering30",
    "chainBOwithMetaRecenteringdim",
    "chainBOwithMetaRecenteringsqrt",
    "chainBOwithMetaTuneRecentering",
    "chainBOwithMetaTuneRecentering30",
    "chainBOwithMetaTuneRecenteringdim",
    "chainBOwithMetaTuneRecenteringsqrt",
    "chainBOwithR",
    "chainBOwithR30",
    "chainBOwithRdim",
    "chainBOwithRsqrt",
]

baselines = ["OnePlusOne", "DiscreteOnePlusOne", "NoisyDiscreteOnePlusOne", "PSO", "DE", "TwoPointsDE"]

basics = ["NGOpt8", "CMandAS2", "CMA", "DE", "MetaModel", "BO"]

cma = ["DiagonalCMA", "CMA"]

competence_map = ["NGO", "Shiwa"]

competitive = [
    "DiagonalCMA",
    "CMA",
    "NGO",
    "Shiwa",
    "NaiveTBPSA",
    "PSO",
    "DE",
    "LhsDE",
    "RandomSearch",
    "OnePlusOne",
    "TwoPointsDE",
]

emna_variants = [
    "IsoEMNA",
    "NaiveIsoEMNA",
    "AnisoEMNA",
    "NaiveAnisoEMNA",
    "CMA",
    "NaiveTBPSA",
    "NaiveIsoEMNATBPSA",
    "IsoEMNATBPSA",
    "NaiveAnisoEMNATBPSA",
    "AnisoEMNATBPSA",
]

large = [
    "NGO",
    "Shiwa",
    "DiagonalCMA",
    "CMA",
    "PSO",
    "DE",
    "MiniDE",
    "QrDE",
    "MiniQrDE",
    "LhsDE",
    "OnePlusOne",
    "SQP",
    "Cobyla",
    "Powell",
    "TwoPointsDE",
    "OnePointDE",
    "AlmostRotationInvariantDE",
    "RotationInvariantDE",
    "Portfolio",
    "ASCMADEthird",
    "ASCMADEQRthird",
    "ASCMA2PDEthird",
    "CMandAS2",
    "CMandAS",
    "CM",
    "MultiCMA",
    "TripleCMA",
    "MultiScaleCMA",
    "RSQP",
    "RCobyla",
    "RPowell",
    "SQPCMA",
    "MetaModel",
    "PolyCMA",
    "ManyCMA",
]

parallel_basics = ["NGOpt8", "CMandAS2", "CMA", "DE", "MetaModel"]

progressive = [ProgDiscAuto, ProgDisc13, ProgDiscInf, ProgAuto, Prog13, ProgInf]

splitters = [SplitCMAAuto, SplitCMA3, SplitCMA5, SplitCMA9, SplitCMA13, 'MetaNGOpt8']

spsa = ['NaiveTBPSA', 'SPSA', 'TBPSA']