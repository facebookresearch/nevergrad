import numpy as np
import matplotlib.pyplot as plt
import PyMoosh as pm
direct = 1
#O1
X = [55.74974562064662, 64.51721502765093, 180.0, 71.45831728839337, 163.77154769294398, 92.44523668129223, 149.2797259423865, 83.17120946329288, 171.95865334680016, 77.71402386137156, 54.16360111353197, 76.37397272365475, 56.834224371707194, 61.35578432990524, 56.96247739106814, 87.39859293945725, 166.63424385284299, 73.75422593383522, 55.42142865829221, 71.69920182739153, 56.68047475453447, 73.52841224151507, 179.61216115000352, 178.70299242619015, 83.94557199061195, 68.37975775707038, 50.20582556043833, 87.2121512580786, 41.195104321161864, 82.8309751881528]
#O2
X = [70.20383363735652, 129.6956456820838, 96.84756530934662, 88.98921296875612, 91.817768683009, 88.13267636851732, 99.56998069382833, 99.7795304388, 89.01814201445629, 85.57236832489929, 83.99921466459104, 86.1031499930238, 83.95361806470511, 95.66566352636484, 67.45111874107111, 67.47358943598512, 79.87886186974505, 69.0043035648222, 70.13992978243306, 69.7677804103167]
#O3
X = [180.0, 143.6302355960137, 84.56106276998703, 50.44457729301243, 78.29290125655007, 175.4943714104941, 164.6558749042036, 180.0, 135.62001501598527, 157.024079896641, 180.0, 132.85534851748812, 129.4916194110505, 149.04997557059275, 116.97396314711872, 75.22726471660889, 180.0, 167.4423946711847, 141.93931529017698, 77.55462360583294, 90.752418322889, 95.9363456663314, 179.0914112988974, 101.11073526048241, 57.30621011882198, 36.370608100615414, 180.0, 131.80366833921784, 162.24353709009827, 120.990854685455]
#X = [177.7657970583877, 137.71646944919638, 177.42512888179374, 178.63957358671894, 178.56661632140123, 172.59233676460877, 179.51918797057164, 149.49041021512673, 177.87434499508086, 120.62082158279898, 172.92737103634522, 111.79484076396406, 159.67523581705115, 115.78713048422883, 130.0468627292436, 136.7062960477102, 134.1403973524692, 118.79971566938877, 139.35753019790758, 109.6183169557006, 97.56768688183854, 105.58335530740541, 98.55662160447366, 107.04279560412188, 109.2453963831291, 101.83169383011241, 81.64302796045384, 88.15700186126944, 72.42972925494774, 113.0342849368005]
#O4 400-1200
X=[177.7657970583877, 137.71646944919638, 177.42512888179374, 178.63957358671894, 178.56661632140123, 172.59233676460877, 179.51918797057164, 149.49041021512673, 177.87434499508086, 120.62082158279898, 172.92737103634522, 111.79484076396406, 159.67523581705115, 115.78713048422883, 130.0468627292436, 136.7062960477102, 134.1403973524692, 118.79971566938877, 139.35753019790758, 109.6183169557006, 97.56768688183854, 105.58335530740541, 98.55662160447366, 107.04279560412188, 109.2453963831291, 101.83169383011241, 81.64302796045384,88.15700186126944, 72.42972925494774, 113.0342849368005]
#O5 400-800
X=[80.22195200279425, 113.3015974529455, 136.18855811672302, 107.79915557696664, 117.14646342711961, 101.15754888941032, 102.11276872568219, 163.02808688711363, 86.85872721206769, 147.3819451196401, 86.44546821360512, 86.70156722998843, 69.48057058643957, 74.4098500246578, 60.24880305688498, 82.43420232138716, 70.55803660313269, 81.02501521337075, 69.15896316713378, 92.2801523215122, 85.79998457684637, 117.50962160448806, 108.97914105915396, 86.1139912834194, 87.37715735419157, 83.45795467490495, 87.79737012671701, 103.58048457077, 93.11166136071512, 94.1580085756629]

n_couches = len(X)

if direct!=1 :
    n_couches = "40"
    algo = "BFGS"
    function = "BraggO"
    budget = 20000

    file_name = f"../ResA/{function}_{algo}_{n_couches}_{budget}.npy"
    results = np.load(file_name,allow_pickle = True)


    #Graphique pour comparaisons
    values = []
    bests = []
    fig1 = plt.figure(1)

    for k in range(len(results)):
        values.append(results[k][1][-1])
        bests.append(results[k][0])
    sorted = np.sort(values)
    agrum = np.argsort(values)
    # Let's sort bests too !
    sorted_bests = []
    for k in range(len(results)):
        sorted_bests.append(bests[agrum[k]])

    plt.plot(sorted)
    plt.title(f'Function {function} with {algo}')

    # Repr√©senter les courbes de convergence

    fig2 = plt.figure(2)
    for k in range(len(results)):
        plt.plot(results[k][1])
    plt.title("Convergences")

    # Visualiser
    fig3 = plt.figure(3)

    # We select a solution to fully analyze.

    X = sorted_bests[0]

nc = int(n_couches)
permittivities = np.array([3.,2.]*int(nc//2))
thicknesses = np.array(X)
starts = np.concatenate((np.array([0]),np.cumsum(thicknesses[0:nc-1])))
plt.barh(starts,permittivities-2.,thicknesses,align = 'edge',color = 'green')
#plt.ylim(sum(thickness),0)
plt.gca().invert_yaxis()

materials = [1.]+permittivities.tolist()+[3.]
thicknesses = [0.] + thicknesses.tolist() + [0.]
stack = np.arange(0,len(permittivities)+2)
print(stack)
print(len(materials))

crystal = pm.Structure(materials,stack,thicknesses,verbose = False)
[wl,r,t,R,T] = pm.Spectrum(crystal, 0., 0., 350, 1200, 200)

fig4 = plt.figure(4)
plt.plot(wl,R,label = "Reflectance")
plt.show()
