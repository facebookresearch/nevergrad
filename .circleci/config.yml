# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

executors:
  ubuntu-3.6:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo


jobs:
  install:
    executor: ubuntu-3.6

    steps:
      - checkout

      # Download and cache dependencies for "main"
      - restore_cache:
          name: "[no-extra] Restore cache"
          keys:
          - v2-dependencies-main-{{ checksum "requirements/main.txt"}}
          # fallback to using the latest cache if no exact match is found

      - run:
          name: "[no-extra] Install dependencies"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -e .

      - save_cache:
          name: "[no-extra] Save cache"
          paths:
            - ./venv
          key: v2-dependencies-main-{{ checksum "requirements/main.txt"}}

      - run:
          name: "[no-extra] Run basic tests (checking dependencies)"
          command: |
            . venv/bin/activate
            python -m nevergrad.optimization.requirements_check  # calls a bit of everything

      - restore_cache:
          name: "[all] Restore cache"
          keys:
          - v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}
          # fallback to installing main requirements
          - v2-dependencies-main-{{ checksum "requirements/main.txt"}}

      - run:
          name: "[all] Install dependencies"
          command: |
            . venv/bin/activate
            pip install -e .[all]

      - save_cache:
          # only this one saves cache to avoid race conditions
          name: "[all] Save cache"
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}

      - run:
          name: "Run wheel and check files presence"
          when: always
          command: |
            . venv/bin/activate
            python setup.py sdist bdist_wheel
            python -c "from pathlib import Path;files = Path('nevergrad.egg-info/SOURCES.txt').read_text().split(); assert 'LICENSE' in files"


  mypy:
    executor: ubuntu-3.6

    steps:
      - checkout

      - restore_cache:
          name: "[all] Restore cache"
          keys:
          - v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}
          - v2-dependencies-main-{{ checksum "requirements/main.txt"}}

      - run:
          name: "[all] Install dependencies"
          command: |
            . venv/bin/activate
            pip install -e .[all]

      - run:
          name: Print installation
          when: always
          command: |
            . venv/bin/activate
            pip freeze

      # Run all tests

      - run:
          name: "[all] Run mypy"
          command: |
            . venv/bin/activate
            mypy --version
            mypy nevergrad


  pytests:
    executor: ubuntu-3.6

    steps:
      - checkout

      - restore_cache:
          name: "[all] Restore cache"
          keys:
          - v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}
          - v2-dependencies-main-{{ checksum "requirements/main.txt"}}

      - run:
          name: "[all] Install dependencies"
          command: |
            . venv/bin/activate
            pip install -e .[all]

      - run:
          name: "[all] Run pytest"
          when: always
          command: |
            . venv/bin/activate
            pytest nevergrad --durations=20 --cov=nevergrad


workflows:
  version: 2
  all_ci:
    jobs:
      - install
      - mypy
      - pytests
