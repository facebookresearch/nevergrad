# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies for "main"
      - restore_cache:
          keys:
          - v2-dependencies-main-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-main-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .[dev]

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-main-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}

      - run:
          name: No-extra dependency install test
          command: |
            . venv/bin/activate
            pytest nevergrad/optimization/test_optimizerlib.py::test_optimizers_recommendation nevergrad/instrumentation/test_core.py

      # Download and cache dependencies for "main"

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}
          # fallback to installing main requirements
          - v2-dependencies-main-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .[all]

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}

      # Run all tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest nevergrad --duration=20 --cov=nevergrad

      - run:
          name: run mypy
          command: |
            . venv/bin/activate
            mypy --ignore-missing-imports nevergrad
